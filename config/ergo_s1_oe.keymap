/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define FN  1

&sl {
    ignore-modifiers;
    release-after-ms = <5000>;
};

/ {
    behaviors {
        caps_pscrn: caps_pscrn {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_PSCRN";
            #binding-cells = <0>;
            bindings = <&caps_word>, <&kp CAPSLOCK>, <&kp PRINTSCREEN>;

            tapping-term-ms = <200>;
        };
    };

    macros {
        cdot: cdot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(KP_NUMBER_2) &kp LA(KP_NUMBER_5) &kp LA(KP_NUMBER_0)>;
            label = "CDOT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | ESC  |  1   |  2   |  3   |  4   |  5   |                                                   |  6   |  7   |  8   |  9   |  0   | BSPC |
            // | WIN  |  Q   |  W   |  E   |  R   |  T   |                                                   |  Y   |  U   |  I   |  O   |  P   | EQL  |
            // | TAB  |  A   |  S   |  D   |  F   |  G   |                                                   |  H   |  J   |  K   |  L   | SCLN | QUOT |
            // | LCTL |  Z   |  X   |  C   |  V   |  B   |      | CTL  | ALT  |         | CAPS | CTL  |      |  N   |  M   | COMM | DOT  | SLSH | MINS |
            //        | GRV  | BSLS | LEFT | RGHT |      | SHFT |  FN  | HOME |         | PGUP | ENT  | SPC  |      |  UP  |  DN  | LBKT | RBKT |
            //                                                         | END  |         | PGDN |

            bindings = <
&kp EQUAL  &kp N1     &kp N2  &kp N3    &kp N4    &kp N5                                                       &kp N6         &kp N7    &kp N8     &kp N9      &kp N0     &kp MINUS
&kp TAB    &kp Q      &kp W   &kp E     &kp R     &kp T                                                        &kp Y          &kp U     &kp I      &kp O       &kp P      &kp BSLH
&kp ESC    &kp A      &kp S   &kp D     &kp F     &kp G                                                        &kp H          &kp J     &kp K      &kp L       &kp SEMI   &kp APOS
&kp LSHFT  &kp Z      &kp X   &kp C     &kp V     &kp B      &kp DEL    &sl 4         &caps_pscrn  &kp INSERT  &kp N          &kp M     &kp COMMA  &kp PERIOD  &kp SLASH  &kp RIGHT_SHIFT
           &kp GRAVE  &cdot   &kp LBKT  &kp RBKT  &kp SPACE  &kp LCTRL  &kp LEFT_GUI  &kp HOME     &kp ENTER   &kp BACKSPACE  &kp LEFT  &kp DOWN   &kp UP      &kp RIGHT
                                                                        &kp LALT      &mo 5
            >;
        };

        Function {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans   &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans   &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                        &trans  &trans
            >;
        };

        Numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &kp KP_NUMLOCK  &kp KP_SLASH  &kp KP_ASTERISK  &kp KP_SUBTRACT  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &kp KP_N7       &kp KP_N8     &kp KP_N9        &kp KP_PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &kp KP_N4       &kp KP_N5     &kp KP_N6        &trans           &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_N1       &kp KP_N2     &kp KP_N3        &kp KP_ENTER     &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_N0       &trans        &kp KP_DOT       &trans
                                                        &trans  &trans
            >;
        };

        Bluetooth {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                                        &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                                                          &trans  &trans
            >;
        };

        fn_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |BT_CLR|  F1  |  F2  |  F3  |  F4  |  F5  |                                                   |      | NLCK |  =   |  /   |  *   |      |
            // |      |  F6  |  F7  |  F8  |  F9  |  F10 |                                                   |      |  7   |  8   |  9   |  -   |      |
            // |      |      |      |      |      |      |                                                   |      |  4   |  5   |  6   |  +   |      |
            // |      |      |      |      |      | PTSC |      |      |      |         |      |      |      |      |  1   |  2   |  3   | ENT  |      |
            //        |      | INS  |      |      |      |      |  FN  |      |         |      |      |      |      |      |      |  .   | ENT  |
            //                                                         |      |         |      |

            bindings = <
&bt BT_CLR  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                         &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&tog 1      &trans  &trans  &trans  &trans  &trans                                         &trans  &trans  &trans  &trans  &trans   &kp F12
&tog 2      &trans  &trans  &trans  &trans  &trans                                         &trans  &trans  &trans  &trans  &trans   &trans
&tog 3      &trans  &trans  &trans  &trans  &trans  &kp F2  &trans  &to 0          &trans  &trans  &trans  &trans  &trans  &trans   &tog 6
            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp PG_UP      &trans  &trans  &trans  &trans  &trans  &trans
                                                            &trans  &kp PAGE_DOWN
            >;
        };

        Symbols {
            bindings = <
&trans         &kp GRAVE     &kp LS(LPAR)  &kp LS(RPAR)   &kp SEMI      &kp COMMA                                                 &trans    &trans         &trans             &trans           &trans      &trans
&kp LS(PLUS)   &kp LS(LBRC)  &kp SQT       &kp LS(DQT)    &kp LS(RBRC)  &kp LS(QMARK)                                             &trans    &trans         &trans             &trans           &trans      &trans
&kp LS(POUND)  &kp CARET     &kp EQUAL     &kp LS(UNDER)  &kp LS(DLLR)  &kp LS(STAR)                                              &kp HOME  &kp PAGE_DOWN  &kp PG_UP          &kp END          &trans      &trans
&trans         &kp LS(LT)    &kp LS(PIPE)  &kp MINUS      &kp LS(GT)    &kp FSLH       &kp PERIOD  &kp STAR       &trans  &trans  &trans    &trans         &trans             &trans           &trans      &trans
               &kp LS(AT)    &kp LS(AMPS)  &kp LBKT       &kp RBKT      &kp PERCENT    &kp COLON   &kp BACKSLASH  &trans  &trans  &trans    &kp K_PREV     &kp K_VOLUME_DOWN  &kp K_VOLUME_UP  &kp K_NEXT
                                                                                                   &kp SEMICOLON  &trans
            >;
        };

        hr_mods_test {
            bindings = <
&trans  &trans          &trans          &trans       &trans            &trans                                  &trans  &trans             &trans       &trans           &trans                   &trans
&trans  &trans          &trans          &trans       &trans            &trans                                  &trans  &trans             &trans       &trans           &trans                   &trans
&trans  &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LCTRL D  &mt LEFT_SHIFT F  &trans                                  &trans  &mt RIGHT_SHIFT J  &mt RCTRL K  &mt RIGHT_ALT L  &mt RIGHT_GUI SEMICOLON  &trans
&trans  &trans          &trans          &trans       &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans             &trans       &trans           &trans                   &trans
        &trans          &trans          &trans       &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans             &trans       &trans           &trans
                                                                                       &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                                        &trans  &trans
            >;
        };
    };
};
